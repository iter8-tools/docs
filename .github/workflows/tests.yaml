name: end-to-end tests

on:
  pull_request:
  workflow_dispatch:


jobs:
  load-test-http:
    name: local httpbin tests
    runs-on: ubuntu-latest
    steps:
    - name: run httpbin
      run: |
        set -e
        docker pull kennethreitz/httpbin
        docker run -p 80:80 kennethreitz/httpbin &
        HOST_IP=$(ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+')
        echo "HOST_IP=$HOST_IP" >> $GITHUB_ENV
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://$HOST_IP/get)" != "200" ]]; do
          sleep 5; 
        done;

    - name: load test GET endpoint
      run: | 
        cat << EOF > experiment-config.yaml
          url: http://$HOST_IP/get
        EOF
    - uses: iter8-tools/iter8-action@v1
      with:
        chart: load-test-http
        valuesFile: experiment-config.yaml

    - name: load test GET endpoint
      run: | 
        cat << EOF > experiment-config.yaml
          url: http://$HOST_IP/get
          SLOs:
            http/latency-p25: 80
            http/latency-p50: 100
            http/latency-p95.0: 200
        EOF
    - uses: iter8-tools/iter8-action@v1
      with:
        chart: load-test-http
        valuesFile: experiment-config.yaml

    - name: load test POST endpoint
      run: | 
        cat << EOF > experiment-config.yaml
          url: http://$HOST_IP/post
          payloadURL: https://cdn.pixabay.com/photo/2021/09/08/17/58/poppy-6607526_1280.jpg
          contentType: "image/jpeg"
          SLOs:
            http/latency-p25: 80
            http/latency-p50: 100
            http/latency-p95.0: 200
        EOF
    - uses: iter8-tools/iter8-action@v1
      with:
        chart: load-test-http
        valuesFile: experiment-config.yaml

  e2e-load-test-grpc:
    name: local grpc tests
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Install Iter8
      run: |
        wget https://github.com/iter8-tools/iter8/releases/download/v0.9.2/iter8-linux-amd64.tar.gz
        tar -xvf iter8-linux-amd64.tar.gz
        mv linux-amd64/iter8 /usr/local/bin

    - name: run greeter
      run: |
        docker pull docker.io/grpc/java-example-hostname:latest
        docker run -p 50051:50051 docker.io/grpc/java-example-hostname:latest &
        sleep 20
        echo "HOST_IP=$(ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+')" >> $GITHUB_ENV
        
    - name: load test grpc service method
      run: | 
        cat << EOF > experiment-config.yaml
          host: $HOST_IP:50051
          call: helloworld.Greeter.SayHello
          protoURL: https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto
          data:
            name: frodo
          SLOs:
            grpc/error-rate: 0
            grpc/latency/mean: 150
            grpc/latency/p90: 300
            grpc/latency/p97.5: 500
        EOF
        cat experiment-config.yaml
    - uses: iter8-tools/iter8-action@v1
      with:
        chart: load-test-grpc
        valuesFile: experiment-config.yaml
        logLevel: trace
