name: end-to-end tests

on:
  pull_request:
  workflow_dispatch:

jobs:
  load-test-http:
    name: local httpbin tests
    runs-on: ubuntu-latest
    steps:
    - name: run httpbin
      run: |
        set -e
        docker pull kennethreitz/httpbin
        docker run -p 80:80 kennethreitz/httpbin &
        HOST_IP=$(ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+')
        echo "HOST_IP=$HOST_IP" >> $GITHUB_ENV
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://$HOST_IP/get)" != "200" ]]; do
          sleep 5; 
        done;

    - name: Install Iter8
      run: |
        wget https://github.com/iter8-tools/iter8/releases/download/v0.10.1/iter8-linux-amd64.tar.gz
        tar -xvf iter8-linux-amd64.tar.gz
        mv linux-amd64/iter8 /usr/local/bin

    - name: load test GET endpoint
      run: |
        iter8 launch -c load-test-http --set url=http://$HOST_IP/get

    - name: load test GET endpoint with SLOs
      run: |
        iter8 launch -c load-test-http \
          --set url=http://$HOST_IP/get \
          --set SLOs.http/latency-p25=80 \
          --set SLOs.http/latency-p50=100 \
          --set SLOs.http/latency-p95.0=200

    - name: download payload
      run: |
        curl -o image.jpg https://cdn.pixabay.com/photo/2021/09/08/17/58/poppy-6607526_1280.jpg
                
    - name: load test POST endpoint
      run: |
        iter8 launch -c load-test-http \ 
          --set url=http://$HOST_IP/post \
          --set payload=image.jpg \
          --set contentType="image/jpeg" \
          --set SLOs.http/latency-p25=80 \
          --set SLOs.http/latency-p50=100 \
          --set SLOs.http/latency-p95.0=200

  e2e-load-test-grpc:
    name: local grpc tests
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Install Iter8
      run: |
        wget https://github.com/iter8-tools/iter8/releases/download/v0.10.1/iter8-linux-amd64.tar.gz
        tar -xvf iter8-linux-amd64.tar.gz
        mv linux-amd64/iter8 /usr/local/bin

    - name: run greeter
      run: |
        docker pull docker.io/grpc/java-example-hostname:latest
        docker run -p 50051:50051 docker.io/grpc/java-example-hostname:latest &
        echo "HOST_IP=$(ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+')" >> $GITHUB_ENV

    - name: download proto file
      run: |
        curl -o helloworld.proto https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto
        
    - name: load test grpc service method
      run: |
        iter8 launch -c load-test-grpc --loglevel=trace \
          --set host=$HOST_IP:50051 \
          --set call=helloworld.Greeter.SayHello \
          --set proto=helloworld.proto \
          --set data.name=frodo \
          --set SLOs.grpc/error-rate=0 \
          --set grpc/latency/mean=150 \
          --set grpc/latency/p90=400 \
          --set grpc/latency/p97.5=500
