name: end-to-end tests

on:
  pull_request:
  workflow_dispatch:


jobs:
  load-test-http:
    name: local httpbin tests
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Install Iter8
      run: |
        wget https://github.com/iter8-tools/iter8/releases/download/v0.9.2/iter8-linux-amd64.tar.gz
        tar -xvf iter8-linux-amd64.tar.gz
        mv linux-amd64/iter8 /usr/local/bin

    - name: run httpbin
      run: |
        set -e
        docker pull kennethreitz/httpbin
        docker run -p 80:80 kennethreitz/httpbin &
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://127.0.0.1/get)" != "200" ]]; do
          sleep 5; 
        done;

    - name: load test GET endpoint
      run: |
        set -e
        iter8 launch -c load-test-http --set url=http://127.0.0.1/get
        cat experiment.yaml
        iter8 report
        iter8 assert -c completed -c nofailure -c slos

    - name: load test GET endpoint
      run: |
        set -e
        iter8 launch -c load-test-http --set url=http://127.0.0.1/get \
                  --set SLOs.http/latency-p25=80 \
                  --set SLOs.http/latency-p50=100 \
                  --set SLOs.http/latency-'p95\.0'=200
        cat experiment.yaml
        iter8 report
        iter8 assert -c completed -c nofailure -c slos

    - name: load test POST endpoint (image/jpeg)
      run: |
        set -e
        iter8 launch -c load-test-http --set url=http://127.0.0.1/post \
                  --set payloadURL=https://cdn.pixabay.com/photo/2021/09/08/17/58/poppy-6607526_1280.jpg \
                  --set contentType="image/jpeg" \
                  --set SLOs.http/latency-p25=80 \
                  --set SLOs.http/latency-p50=100 \
                  --set SLOs.http/latency-'p95\.0'=200
        cat experiment.yaml
        iter8 report
        iter8 assert -c completed -c nofailure -c slos

  e2e-load-test-grpc:
    name: local grpc tests
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Install Iter8
      run: |
        wget https://github.com/iter8-tools/iter8/releases/download/v0.9.2/iter8-linux-amd64.tar.gz
        tar -xvf iter8-linux-amd64.tar.gz
        mv linux-amd64/iter8 /usr/local/bin

    - name: run greeter
      run: |
        docker run -p 50051:50051 docker.io/grpc/java-example-hostname:latest &
        sleep 20

    - name: load test GET endpoint
      run: | 
        cat << EOF > experiment-config.yaml
          host: "127.0.0.1:50051"
          call: "helloworld.Greeter.SayHello"
          protoURL: "https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto"
          data:
            name: frodo
          SLOs:
            grpc/error-count: 0
            grpc/latency/mean:  100
            grpc/latency/p90:   200
            grpc/latency/p97.5: 400
        EOF

    - uses: iter8-tools/iter8-action@main
      with:
        chart: load-test-grpc
        valuesFile: experiment-config.yaml        
        
    # - name: load test grpc service method
    #   run: |
    #     set -e
    #     iter8 launch -c load-test-grpc --set-string host="127.0.0.1:50051" \
    #               --set-string call="helloworld.Greeter.SayHello" \
    #               --set-string protoURL="https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto" \
    #               --set data.name="frodo" \
    #               --set SLOs.grpc/error-rate=0 \
    #               --set SLOs.grpc/latency/mean=100 \
    #               --set SLOs.grpc/latency/p90=200 \
    #               --set SLOs.grpc/latency/p'97\.5'=400
    #     cat experiment.yaml
    #     iter8 report
    #     iter8 assert -c completed -c nofailure -c slos
